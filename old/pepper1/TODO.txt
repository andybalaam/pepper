
+ Don't evaluate things unless they are wrapped in now().
  Exceptions: anything used in a context where it is expected to be one
  of the following _will_ be immediately evaluated:
  - type
  - function
  - import statement
  - if condition (does this make sense?)

- Delete some calls to ct_eval - should be enough in PepValue.render()?

- Make a new now_if instead of evaluating if conditions?  If so,
  we'll need versions for lots of things like switch, type_switch...

- Rename evaluate() on a quote to "unquote" or something similar

- Try an "addatruntime" sample to flush out emitting printf 1, 2 when
  it should be 1 + 2.

- Fix problem where a void method can return in int with no complaints.

- Break into lots of separate files and dirs

- Remove special cases for def_init - it can work just like any method I think

- Move arg_types_and_names into PepFunction

- Ensure local variables can't hide wider-scope variables with the same
  name, but class members _can_ have the same name as something in scope.

- Overloading at runtime
  + Only one definition of function rendered when called multiple times
  - Multiple calls with different types mean multiple fns rendered, with
    different names
  - More test cases with different and same arg lists

- Overloads on different user-defined types

- Find out why if I call gt3 twice in calculated_type.pepper it returns the
  same answer each time.

- Line and column number of errors, including in quoted code

- lexed.g newlines in text

- Rename package to pepper (from libpepper)

- Move all values into new "vals" structure

- Escaping quotes in strings

- Spaces in class bodies
- Checking whether class members are available, and of the right type
- Multiple def_inits in a class must agree on properties

- Enforce not allowed string "_pep_" in any identifier

- Modifying values

- Quoting

