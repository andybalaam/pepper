
import sys

# TODO: hold size (100) in a variable

def void svg_start( int unused ):
    print( "<svg xmlns:svg='http://www.w3.org/2000/svg' xmlns='http://www.w3.org/2000/svg' width='100' height='100'>" )

def void svg_draw_line( int unused, float x1, float y1, float x2, float y2 ):
    float ax1 = 100.0 * x1
    float ay1 = 100.0 * ( 1 - y1 )
    float ax2 = 100.0 * x2
    float ay2 = 100.0 * ( 1 - y2 )
    print( "  <path d='M " + ax1 + " " + ay1 + " " + ax2 + " " + ay2 + "' style='stroke:#000000;'/>" )

def void svg_draw_circle( int unused, float x, float y, float radius ):
    # TODO: print( "  <circle cx='%f' cy="%f' r='%f'/>" % ( ( 100.0 * x ), ( 100.0 * y ), ( 100.0 * radius ) )
    # TODO: allow bracketted expressions within print instead of needing variables ax etc. here
    float ax = 100.0 * x
    float ay = 100.0 * y
    float ar = 100.0 * radius
    print( "  <circle cx='" + ax + "' cy='" + ay + "' r='" + ar + "'/>" )

def void svg_end( int unused ):
    print( "</svg>" )

# TODO: Will only work when we can pass functions in as arguments
#def void svg_document( int unused, function(void,(frame)) painter )
#    svg_start( unused )
#    (painter (make-frame (make-vect 0 0)
#                         (make-vect 1 0)
#                         (make-vect 0 1)))
#    (svg-end))

# TODO: can't currently hold len( sys.argv ) in a variable!

# TODO: Have to pass len( sys.argv ) to force runtime evaluation
svg_start( len( sys.argv ) )


def float xcoord( int i, int max ):
    return 0.05 + 0.1 * i * 0.1 * i * 0.1 * i * 0.1 * i

def float ycoord( int i, int max ):
    return 0.05 + 0.1 * i * 0.1 * i

def float radius( int i, int max ):
    return 0.1 * 0.1 * i

int num_circles = 10
for int i in range( 0, num_circles + len( sys.argv ) - 1):
    # TODO: allow line breaking
    svg_draw_circle( len( sys.argv ), xcoord( i, num_circles ), ycoord( i, num_circles ), radius( i, num_circles ) )



svg_end( len( sys.argv ) )








